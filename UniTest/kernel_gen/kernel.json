{
  "info": {
    "companyName": "TK Automation",
    "companyURL": "https://github.com/tkucic",
    "projectName": "UniTest",
    "projectVersion": "1.0",
    "projectURL": "https://github.com/tkucic/UniTest",
    "contentDescription": "UniTest is a PLC, IDE and manufacturer agnostic library written using only the features of the IEC61131 standard. Due to this, portability to all IEC compliant platforms is straightforward and can be achieved programmatically or with minimal manual work.",
    "contactPerson": "Toni Kucic",
    "contentGenerated": "2021-05-14T20:20:18.2154107"
  },
  "namespaces": [
    {
      "name": "UniTest",
      "prgs": [],
      "fbs": [
        {
          "name": "utTestSuite",
          "type": "functionBlock",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "Id",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Id of the test object. Must be unique number"
                },
                {
                  "name": "Name",
                  "type": "STRING[250]",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Name of the test object"
                },
                {
                  "name": "RunTests",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Starts all tests that are in setup state. Sets state to running."
                },
                {
                  "name": "ResetTests",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Sets state to setup on test cases that are ut_PASSED or ut_FAILED."
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR_IN_OUT",
              "vars": [
                {
                  "name": "TestCases",
                  "type": "ARRAY[0..20] OF utTestCase",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Array of test case definition"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR_OUTPUT",
              "vars": [
                {
                  "name": "Summary",
                  "type": "utTestCaseSummary",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Summary of the test results"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "runCmd",
                  "type": "R_TRIG",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Trigger to prevent constant run commands"
                },
                {
                  "name": "resetCmd",
                  "type": "R_TRIG",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Trigger to prevent constant reset commands"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "(*Copy name of object under test*)\nSummary.Id := Id;\nSummary.Name := Name;\n\n(*Handle commands to start*)\nrunCmd(CLK:=RunTests);\nresetCmd(CLK:=ResetTests);\n\n(*Calculate total number of tests and other flags*)\nSummary.TotalTests := 0;\nSummary.TestsPassed := 0;\nSummary.TestsFailed := 0; \nSummary.TestsRunning := FALSE;\nFOR i:=0 TO 20 DO\n\tIF TestCases[i].id > 0 THEN\n\t\tSummary.TotalTests := Summary.TotalTests + 1;\n\tEND_IF\n\t(*Start the test if the Run command is true, the test exists and it is in setup state*)\n\tIF TestCases[i].id > 0 AND TestCases[i].state = utTestCaseStates.ut_SETUP AND runCmd.Q THEN\n\t\tTestCases[i].state := utTestCaseStates.ut_RUNNING;\n\tEND_IF\n\t\n\t(*Reset the test if the test exists and its ut_PASSED or ut_FAILED*)\n\tIF TestCases[i].id > 0 AND TestCases[i].state > utTestCaseStates.ut_RUNNING AND resetCmd.Q THEN\n\t\tTestCases[i].state := utTestCaseStates.ut_SETUP;\n\tEND_IF\n\t\n\t(*Check the states of the test cases*)\n\tIF TestCases[i].state = utTestCaseStates.ut_RUNNING THEN\n\t\tSummary.TestsRunning := TRUE;\n\tEND_IF\n\tIF TestCases[i].state = utTestCaseStates.ut_PASSED THEN\n\t\tSummary.TestsPassed := Summary.TestsPassed + 1;\n\tEND_IF\n\tIF TestCases[i].state = utTestCaseStates.ut_FAILED THEN\n\t\tSummary.TestsFailed := Summary.TestsFailed + 1;\n\tEND_IF\nEND_FOR\n\n(*Error if number of tests defined is 0*)\nIF Summary.TotalTests = 0 THEN\n\tSummary.Error := utErrors.ut_NO_TEST_CASES_DEFINED;\n\tRETURN;\nEND_IF\n\n(*Calculate the pass rate if all tests have finished*)\nIF NOT Summary.TestsRunning THEN\n\tSummary.PassRate := (Summary.TestsPassed / UINT_TO_REAL(Summary.TotalTests)) * 100.0;\nELSE\n\tSummary.PassRate := 0;\nEND_IF",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 3,
            "parCount": 6,
            "actionCount": 0,
            "lnCode": 51,
            "varSize": 3,
            "parSize": 12,
            "lnCodeSize": 51,
            "size": 66
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fb/utTestSuite.md",
          "description": "Enables running, resetting and reporting for tests cases defined of a POU under test"
        },
        {
          "name": "utTestReporter",
          "type": "functionBlock",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "Results",
                  "type": "POINTER TO ARRAY[0..65535] OF utTestCaseSummary",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Summaries of tests for each POU under test"
                },
                {
                  "name": "Size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (number of indexes)"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR_OUTPUT",
              "vars": [
                {
                  "name": "NrPousUnderTest",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Total number of POUs under test"
                },
                {
                  "name": "NrOfTests",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Total number of tests"
                },
                {
                  "name": "NrTestsPassed",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Number of tests passed"
                },
                {
                  "name": "NrTestsFailed",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Number of tests failed"
                },
                {
                  "name": "PassRate",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Total pass rate"
                },
                {
                  "name": "TestsInProgress",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Indicates that one or more tests are in progress"
                },
                {
                  "name": "Error",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Indicates that one or more tests are in error state"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "(*Reset totals*)\nNrPousUnderTest := 0;\nNrOfTests := 0;\nNrTestsPassed := 0;\nNrTestsFailed := 0;\nPassRate := 0;\nTestsInProgress := FALSE;\nError := FALSE;\n\n(*Count totals*)\nFOR i:=0 TO Size DO\n\tIF Results[i].Id > 0 THEN\n\t\t(*Count existing POUs under test*)\n\t\tNrPousUnderTest := NrPousUnderTest + 1;\n\t\t(*Count the pass rate. Needs to be divided in the end by the number of total tests*)\n\t\tPassRate := PassRate + Results[i].PassRate;\n\t\t(*Count the number of tests*)\n\t\tNrOfTests := NrOfTests + Results[i].TotalTests;\n\t\t(*Count the number of tests passed*)\n\t\tNrTestsPassed := NrTestsPassed + Results[i].TestsPassed;\n\t\t(*Count the number of tests failed*)\n\t\tNrTestsFailed := NrTestsFailed + Results[i].TestsFailed;\n\t\t\n\t\t(*Indicators*)\n\t\tIF Results[i].TestsRunning THEN\n\t\t\tTestsInProgress := TRUE;\n\t\tEND_IF\n\t\tIF Results[i].Error <> utErrors.ut_NO_ERROR THEN\n\t\t\tError := TRUE;\n\t\tEND_IF\n\tEND_IF\nEND_FOR\nPassRate := PassRate / NrPousUnderTest;",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 1,
            "parCount": 8,
            "actionCount": 0,
            "lnCode": 33,
            "varSize": 1,
            "parSize": 16,
            "lnCodeSize": 33,
            "size": 50
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fb/utTestReporter.md",
          "description": "Provides feedback on the status of tests on a system scale"
        }
      ],
      "fcs": [
        {
          "name": "assertFalse",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "condition",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertFalse := NOT condition;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 1,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 2,
            "lnCodeSize": 2,
            "size": 4
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertFalse.md",
          "description": "Returns TRUE if condition is NOT TRUE"
        },
        {
          "name": "assertEqual_BOOL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_BOOL := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_BOOL.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_BYTE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_BYTE := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_BYTE.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_WORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_WORD := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_WORD.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_DWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_DWORD := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_DWORD.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_LWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_LWORD := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_LWORD.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_SINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_SINT := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_SINT.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_USINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_USINT := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_USINT.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_INT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_INT := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_INT.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_UINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_UINT := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_UINT.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_DINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_DINT := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_DINT.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_UDINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_UDINT := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_UDINT.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_LINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_LINT := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_LINT.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_ULINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_ULINT := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_ULINT.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_REAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_REAL := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_REAL.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_LREAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_LREAL := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_LREAL.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_STRING",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "STRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "STRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_STRING := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_STRING.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_WSTRING",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "WSTRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "WSTRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_WSTRING := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_WSTRING.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_TIME := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_TIME.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_LTIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_LTIME := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_LTIME.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_DATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_DATE := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_DATE.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_LDATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_LDATE := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_LDATE.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_DATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_DATE_AND_TIME := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_DATE_AND_TIME.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_LDATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_LDATE_AND_TIME := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_LDATE_AND_TIME.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_TIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_TIME_OF_DAY := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_TIME_OF_DAY.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertEqual_LTIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertEqual_LTIME_OF_DAY := act = xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertEqual_LTIME_OF_DAY.md",
          "description": "Returns TRUE if act = xp."
        },
        {
          "name": "assertNotEqual_BOOL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_BOOL := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_BOOL.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_BYTE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_BYTE := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_BYTE.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_WORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_WORD := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_WORD.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_DWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_DWORD := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_DWORD.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_LWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_LWORD := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_LWORD.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_SINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_SINT := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_SINT.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_USINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_USINT := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_USINT.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_INT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_INT := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_INT.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_UINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_UINT := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_UINT.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_DINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_DINT := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_DINT.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_UDINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_UDINT := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_UDINT.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_LINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_LINT := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_LINT.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_ULINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_ULINT := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_ULINT.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_REAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_REAL := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_REAL.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_LREAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_LREAL := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_LREAL.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_STRING",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "STRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "STRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_STRING := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_STRING.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_WSTRING",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "WSTRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "WSTRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_WSTRING := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_WSTRING.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_TIME := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_TIME.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_LTIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_LTIME := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_LTIME.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_DATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_DATE := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_DATE.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_LDATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_LDATE := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_LDATE.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_DATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_DATE_AND_TIME := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_DATE_AND_TIME.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_LDATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_LDATE_AND_TIME := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_LDATE_AND_TIME.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_TIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_TIME_OF_DAY := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_TIME_OF_DAY.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertNotEqual_LTIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertNotEqual_LTIME_OF_DAY := act <> xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertNotEqual_LTIME_OF_DAY.md",
          "description": "Returns TRUE if act <> xp."
        },
        {
          "name": "assertGreater_BYTE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_BYTE := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_BYTE.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_WORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_WORD := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_WORD.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_DWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_DWORD := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_DWORD.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_LWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_LWORD := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_LWORD.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_SINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_SINT := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_SINT.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_USINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_USINT := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_USINT.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_INT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_INT := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_INT.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_UINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_UINT := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_UINT.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_DINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_DINT := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_DINT.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_UDINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_UDINT := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_UDINT.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_LINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_LINT := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_LINT.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_ULINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_ULINT := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_ULINT.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_REAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_REAL := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_REAL.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_LREAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_LREAL := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_LREAL.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_TIME := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_TIME.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_LTIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_LTIME := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_LTIME.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_DATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_DATE := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_DATE.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_LDATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_LDATE := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_LDATE.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_DATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_DATE_AND_TIME := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_DATE_AND_TIME.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_LDATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_LDATE_AND_TIME := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_LDATE_AND_TIME.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_TIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_TIME_OF_DAY := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_TIME_OF_DAY.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreater_LTIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreater_LTIME_OF_DAY := act > xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreater_LTIME_OF_DAY.md",
          "description": "Returns TRUE if act > xp."
        },
        {
          "name": "assertGreaterEqual_BYTE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_BYTE := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_BYTE.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_WORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_WORD := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_WORD.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_DWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_DWORD := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_DWORD.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_LWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_LWORD := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_LWORD.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_SINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_SINT := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_SINT.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_USINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_USINT := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_USINT.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_INT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_INT := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_INT.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_UINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_UINT := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_UINT.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_DINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_DINT := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_DINT.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_UDINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_UDINT := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_UDINT.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_LINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_LINT := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_LINT.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_ULINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_ULINT := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_ULINT.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_REAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_REAL := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_REAL.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_LREAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_LREAL := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_LREAL.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_TIME := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_TIME.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_LTIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_LTIME := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_LTIME.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_DATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_DATE := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_DATE.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_LDATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_LDATE := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_LDATE.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_DATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_DATE_AND_TIME := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_DATE_AND_TIME.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_LDATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_LDATE_AND_TIME := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_LDATE_AND_TIME.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_TIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_TIME_OF_DAY := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_TIME_OF_DAY.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertGreaterEqual_LTIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertGreaterEqual_LTIME_OF_DAY := act >= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertGreaterEqual_LTIME_OF_DAY.md",
          "description": "Returns TRUE if act >= xp."
        },
        {
          "name": "assertLess_BYTE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_BYTE := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_BYTE.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_WORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_WORD := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_WORD.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_DWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_DWORD := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_DWORD.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_LWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_LWORD := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_LWORD.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_SINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_SINT := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_SINT.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_USINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_USINT := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_USINT.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_INT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_INT := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_INT.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_UINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_UINT := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_UINT.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_DINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_DINT := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_DINT.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_UDINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_UDINT := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_UDINT.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_LINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_LINT := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_LINT.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_ULINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_ULINT := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_ULINT.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_REAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_REAL := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_REAL.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_LREAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_LREAL := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_LREAL.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_TIME := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_TIME.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_LTIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_LTIME := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_LTIME.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_DATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_DATE := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_DATE.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_LDATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_LDATE := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_LDATE.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_DATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_DATE_AND_TIME := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_DATE_AND_TIME.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_LDATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_LDATE_AND_TIME := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_LDATE_AND_TIME.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_TIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_TIME_OF_DAY := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_TIME_OF_DAY.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLess_LTIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLess_LTIME_OF_DAY := act < xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLess_LTIME_OF_DAY.md",
          "description": "Returns TRUE if act < xp."
        },
        {
          "name": "assertLessEqual_BYTE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_BYTE := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_BYTE.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_WORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_WORD := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_WORD.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_DWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_DWORD := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_DWORD.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_LWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_LWORD := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_LWORD.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_SINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_SINT := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_SINT.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_USINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_USINT := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_USINT.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_INT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_INT := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_INT.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_UINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_UINT := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_UINT.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_DINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_DINT := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_DINT.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_UDINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_UDINT := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_UDINT.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_LINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_LINT := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_LINT.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_ULINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_ULINT := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_ULINT.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_REAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_REAL := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_REAL.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_LREAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_LREAL := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_LREAL.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_TIME := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_TIME.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_LTIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_LTIME := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_LTIME.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_DATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_DATE := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_DATE.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_LDATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_LDATE := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_LDATE.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_DATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_DATE_AND_TIME := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_DATE_AND_TIME.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_LDATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_LDATE_AND_TIME := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_LDATE_AND_TIME.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_TIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_TIME_OF_DAY := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_TIME_OF_DAY.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertLessEqual_LTIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertLessEqual_LTIME_OF_DAY := act <= xp;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 2,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 4,
            "lnCodeSize": 2,
            "size": 6
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertLessEqual_LTIME_OF_DAY.md",
          "description": "Returns TRUE if act <= xp."
        },
        {
          "name": "assertArrayEqual_BOOL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_BOOL := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_BOOL := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_BOOL.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_BYTE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO BYTE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_BYTE := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_BYTE := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_BYTE.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_WORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO WORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_WORD := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_WORD := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_WORD.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_DWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO DWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_DWORD := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_DWORD := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_DWORD.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_LWORD",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO LWORD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_LWORD := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_LWORD := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_LWORD.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_SINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO SINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_SINT := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_SINT := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_SINT.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_USINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO USINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_USINT := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_USINT := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_USINT.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_INT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO INT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_INT := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_INT := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_INT.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_UINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_UINT := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_UINT := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_UINT.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_DINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO DINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_DINT := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_DINT := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_DINT.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_UDINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO UDINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_UDINT := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_UDINT := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_UDINT.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_LINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO LINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_LINT := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_LINT := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_LINT.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_ULINT",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO ULINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_ULINT := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_ULINT := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_ULINT.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_REAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO REAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_REAL := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_REAL := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_REAL.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_LREAL",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO LREAL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_LREAL := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_LREAL := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_LREAL.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_STRING",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF STRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF STRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO STRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO STRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_STRING := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_STRING := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_STRING.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_WSTRING",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF WSTRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF WSTRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO WSTRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO WSTRING",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_WSTRING := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_WSTRING := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_WSTRING.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_TIME := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_TIME := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_TIME.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_LTIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO LTIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_LTIME := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_LTIME := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_LTIME.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_DATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO DATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_DATE := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_DATE := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_DATE.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_LDATE",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO LDATE",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_LDATE := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_LDATE := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_LDATE.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_DATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO DT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_DATE_AND_TIME := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_DATE_AND_TIME := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_DATE_AND_TIME.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_LDATE_AND_TIME",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO LDATE_AND_TIME",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_LDATE_AND_TIME := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_LDATE_AND_TIME := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_LDATE_AND_TIME.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_TIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO TOD",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_TIME_OF_DAY := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_TIME_OF_DAY := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_TIME_OF_DAY.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertArrayEqual_LTIME_OF_DAY",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "act",
                  "type": "POINTER TO ARRAY[0..32000] OF LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                },
                {
                  "name": "xp",
                  "type": "POINTER TO ARRAY[0..32000] OF LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test against"
                },
                {
                  "name": "size",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array (ADR(act))"
                }
              ],
              "attribute": ""
            },
            {
              "name": "VAR",
              "vars": [
                {
                  "name": "i",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Iterator variable"
                },
                {
                  "name": "vStop",
                  "type": "UINT",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Size of the array / End of iteration"
                },
                {
                  "name": "pt1",
                  "type": "POINTER TO LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array act"
                },
                {
                  "name": "pt2",
                  "type": "POINTER TO LTIME_OF_DAY",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Pointer to the element of the array xp"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "vStop := (size / SIZEOF(act^[0])) - 1;\n\nFOR i:=0 TO vStop DO\n\tpt1 := ADR(act^[i]);\n\tpt2 := ADR(xp^[i]);\n\tIF pt1^ <> pt2^ THEN\n\t\tassertArrayEqual_LTIME_OF_DAY := FALSE;\n\t\tRETURN;\n\tEND_IF\nEND_FOR\n(*If we reach here, all elements are equal*)\nassertArrayEqual_LTIME_OF_DAY := TRUE;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 4,
            "parCount": 3,
            "lnCode": 13,
            "varSize": 4,
            "parSize": 6,
            "lnCodeSize": 13,
            "size": 23
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertArrayEqual_LTIME_OF_DAY.md",
          "description": "Returns TRUE if act == xp."
        },
        {
          "name": "assertTrue",
          "type": "function",
          "returnType": "BOOL",
          "if": [
            {
              "name": "VAR_INPUT",
              "vars": [
                {
                  "name": "condition",
                  "type": "BOOL",
                  "attribute": "",
                  "initialValue": "",
                  "description": "Variable to test"
                }
              ],
              "attribute": ""
            }
          ],
          "code": "assertTrue := condition;\nRETURN;\n",
          "actions": [],
          "docStrings": [],
          "metrics": {
            "varCount": 0,
            "parCount": 1,
            "lnCode": 2,
            "varSize": 0,
            "parSize": 2,
            "lnCodeSize": 2,
            "size": 4
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/fc/assertTrue.md",
          "description": "Returns TRUE if condition is TRUE"
        }
      ],
      "class": [],
      "dts": [
        {
          "name": "utTestCase",
          "baseType": "struct",
          "initialValue": "",
          "attribute": "",
          "description": "Structure holding data about one test case",
          "components": [
            {
              "name": "id",
              "type": "UINT",
              "attribute": "",
              "initialValue": "",
              "description": "Identifier of the test"
            },
            {
              "name": "desc",
              "type": "ARRAY[0..4] OF STRING[255]",
              "attribute": "",
              "initialValue": "",
              "description": "Description of the test case"
            },
            {
              "name": "state",
              "type": "utTestCaseStates",
              "attribute": "",
              "initialValue": "",
              "description": "State of the test"
            },
            {
              "name": "msg",
              "type": "STRING[255]",
              "attribute": "",
              "initialValue": "",
              "description": "Result of the test"
            }
          ],
          "metrics": {
            "cptCount": 4,
            "size": 4
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/dt/utTestCase.md"
        },
        {
          "name": "utTestCaseStates",
          "baseType": "enum",
          "initialValue": "",
          "attribute": "",
          "description": "Defines all the states a test case can be in",
          "components": [
            {
              "name": "ut_SETUP",
              "initialValue": "0",
              "attribute": "",
              "type": "enum",
              "description": ""
            },
            {
              "name": "ut_RUNNING",
              "initialValue": "1",
              "attribute": "",
              "type": "enum",
              "description": ""
            },
            {
              "name": "ut_PASSED",
              "initialValue": "2",
              "attribute": "",
              "type": "enum",
              "description": ""
            },
            {
              "name": "ut_FAILED",
              "initialValue": "3",
              "attribute": "",
              "type": "enum",
              "description": ""
            }
          ],
          "metrics": {
            "cptCount": 4,
            "size": 4
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/dt/utTestCaseStates.md"
        },
        {
          "name": "utTestCaseSummary",
          "baseType": "struct",
          "initialValue": "",
          "attribute": "",
          "description": "Structure that holds the summary of all tests for a defined POU under test",
          "components": [
            {
              "name": "Id",
              "type": "UINT",
              "attribute": "",
              "initialValue": "",
              "description": "Id of the test object. Must be unique number"
            },
            {
              "name": "Name",
              "type": "STRING[250]",
              "attribute": "",
              "initialValue": "",
              "description": "Name of the test object"
            },
            {
              "name": "TotalTests",
              "type": "UINT",
              "attribute": "",
              "initialValue": "",
              "description": "Total number of tests existing"
            },
            {
              "name": "TestsPassed",
              "type": "UINT",
              "attribute": "",
              "initialValue": "",
              "description": "Number of tests passed"
            },
            {
              "name": "TestsFailed",
              "type": "UINT",
              "attribute": "",
              "initialValue": "",
              "description": "Number of tests failed"
            },
            {
              "name": "PassRate",
              "type": "REAL",
              "attribute": "",
              "initialValue": "",
              "description": "Pass rate % of the tests"
            },
            {
              "name": "TestsRunning",
              "type": "BOOL",
              "attribute": "",
              "initialValue": "",
              "description": "One or more tests are running"
            },
            {
              "name": "Error",
              "type": "utErrors",
              "attribute": "",
              "initialValue": "",
              "description": "Error code if error occured"
            }
          ],
          "metrics": {
            "cptCount": 8,
            "size": 8
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/dt/utTestCaseSummary.md"
        },
        {
          "name": "utErrors",
          "baseType": "enum",
          "initialValue": "",
          "attribute": "",
          "description": "Definition of all errors that can occur in the framework",
          "components": [
            {
              "name": "ut_NO_ERROR",
              "initialValue": "0",
              "attribute": "",
              "type": "enum",
              "description": ""
            },
            {
              "name": "ut_NO_TEST_CASES_DEFINED",
              "initialValue": "100",
              "attribute": "",
              "type": "enum",
              "description": ""
            }
          ],
          "metrics": {
            "cptCount": 2,
            "size": 2
          },
          "docLink": "https://github.com/tkucic/UniTest/blob/main/docs/docs/ns/UniTest/dt/utErrors.md"
        }
      ],
      "vars": [],
      "metrics": {
        "size": 1545,
        "varCount": 104,
        "parCount": 367,
        "dtCount": 4,
        "prgCount": 0,
        "fbCount": 2,
        "fcCount": 165,
        "classCount": 0,
        "lnCode": 689
      }
    }
  ],
  "sca": [
    {
      "Type": "Data type",
      "Project": "Iec Unit Test",
      "Namespace": "UniTest",
      "Object": "utTestCase",
      "Child": "",
      "Sev": "Quality",
      "Rule": "Data type unused",
      "Msg": "utTestCase is possibly not used in the project"
    },
    {
      "Type": "Data type component",
      "Project": "Iec Unit Test",
      "Namespace": "UniTest",
      "Object": "utTestCaseStates",
      "Child": "ut_SETUP",
      "Sev": "Quality",
      "Rule": "Missing description",
      "Msg": "Component ut_SETUP is missing description"
    },
    {
      "Type": "Data type component",
      "Project": "Iec Unit Test",
      "Namespace": "UniTest",
      "Object": "utTestCaseStates",
      "Child": "ut_RUNNING",
      "Sev": "Quality",
      "Rule": "Missing description",
      "Msg": "Component ut_RUNNING is missing description"
    },
    {
      "Type": "Data type component",
      "Project": "Iec Unit Test",
      "Namespace": "UniTest",
      "Object": "utTestCaseStates",
      "Child": "ut_PASSED",
      "Sev": "Quality",
      "Rule": "Missing description",
      "Msg": "Component ut_PASSED is missing description"
    },
    {
      "Type": "Data type component",
      "Project": "Iec Unit Test",
      "Namespace": "UniTest",
      "Object": "utTestCaseStates",
      "Child": "ut_FAILED",
      "Sev": "Quality",
      "Rule": "Missing description",
      "Msg": "Component ut_FAILED is missing description"
    },
    {
      "Type": "Data type component",
      "Project": "Iec Unit Test",
      "Namespace": "UniTest",
      "Object": "utErrors",
      "Child": "ut_NO_ERROR",
      "Sev": "Quality",
      "Rule": "Missing description",
      "Msg": "Component ut_NO_ERROR is missing description"
    },
    {
      "Type": "Data type component",
      "Project": "Iec Unit Test",
      "Namespace": "UniTest",
      "Object": "utErrors",
      "Child": "ut_NO_TEST_CASES_DEFINED",
      "Sev": "Quality",
      "Rule": "Missing description",
      "Msg": "Component ut_NO_TEST_CASES_DEFINED is missing description"
    }
  ],
  "metrics": {
    "size": 13888,
    "varCount": 1559,
    "parCount": 367,
    "dtCount": 4,
    "prgCount": 166,
    "fbCount": 2,
    "fcCount": 165,
    "classCount": 0,
    "lnCode": 11577
  }
}